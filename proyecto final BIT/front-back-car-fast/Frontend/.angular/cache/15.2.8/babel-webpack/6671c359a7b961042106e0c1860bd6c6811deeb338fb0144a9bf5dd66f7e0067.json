{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"../../services/cars.service\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"@angular/common\";\nfunction CarsComponent_div_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 3)(1, \"div\", 4);\n    i0.ɵɵelement(2, \"img\", 5);\n    i0.ɵɵelementStart(3, \"div\", 6)(4, \"h1\", 7);\n    i0.ɵɵtext(5);\n    i0.ɵɵpipe(6, \"uppercase\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(7, \"h2\", 8);\n    i0.ɵɵtext(8);\n    i0.ɵɵpipe(9, \"uppercase\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(10, \"p\", 8);\n    i0.ɵɵtext(11);\n    i0.ɵɵpipe(12, \"currency\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(13, \"button\", 9);\n    i0.ɵɵtext(14, \"VER\");\n    i0.ɵɵelementEnd()()()();\n  }\n  if (rf & 2) {\n    const carCargado_r1 = ctx.$implicit;\n    i0.ɵɵadvance(5);\n    i0.ɵɵtextInterpolate1(\"\", i0.ɵɵpipeBind1(6, 4, carCargado_r1.marca), \" \");\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate(i0.ɵɵpipeBind1(9, 6, carCargado_r1.modelo));\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate(i0.ɵɵpipeBind1(12, 8, carCargado_r1.precio));\n    i0.ɵɵadvance(2);\n    i0.ɵɵpropertyInterpolate1(\"routerLink\", \"getCar/\", carCargado_r1._id, \"\");\n  }\n}\nexport class CarsComponent {\n  //inyectarlo propiedad e programacion orientada a objetos (inyeccion de dependencias)\n  constructor(carsServices, router) {\n    this.carsServices = carsServices;\n    this.router = router;\n    this.carsCargados = [];\n  }\n  //para estar seguro que solo se usa en ese componente pomenos private\n  ngOnInit() {\n    this.getCars();\n  }\n  getCars() {\n    this.carsServices.getCars().subscribe(cars => {\n      this.carsCargados = cars,\n      //por eso lo guardamos en una variable para poder sacar el cars y utilizarlo \n      console.log(this.carsCargados);\n    });\n  }\n}\nCarsComponent.ɵfac = function CarsComponent_Factory(t) {\n  return new (t || CarsComponent)(i0.ɵɵdirectiveInject(i1.CarsService), i0.ɵɵdirectiveInject(i2.Router));\n};\nCarsComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: CarsComponent,\n  selectors: [[\"list-cars\"]],\n  decls: 3,\n  vars: 1,\n  consts: [[1, \"container\"], [1, \"row\", \"cards-container\"], [\"class\", \"col-12 col-sm-6 col-md-4 col-lg-3 \", 4, \"ngFor\", \"ngForOf\"], [1, \"col-12\", \"col-sm-6\", \"col-md-4\", \"col-lg-3\"], [1, \"card\"], [\"src\", \"https://picsum.photos/700/400?cars\", \"alt\", \"imagen aleatoria\", 1, \"card-img\"], [1, \"card-body\"], [1, \"card-title\"], [1, \"card-text\"], [\"type\", \"button\", 3, \"routerLink\"]],\n  template: function CarsComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1);\n      i0.ɵɵtemplate(2, CarsComponent_div_2_Template, 15, 10, \"div\", 2);\n      i0.ɵɵelementEnd()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngForOf\", ctx.carsCargados);\n    }\n  },\n  dependencies: [i3.NgForOf, i2.RouterLink, i3.UpperCasePipe, i3.CurrencyPipe],\n  styles: [\"var[_ngcontent-%COMP%]   resource[_ngcontent-%COMP%];\\n (()[_ngcontent-%COMP%]   =[_ngcontent-%COMP%] >  { // webpackBootstrap\\n \\tvar __webpack_modules__ = ({\\n\\n 795:\\n\\n (() => {\\n\\nthrow new Error(\\\"Module build failed (from ./node_modules/postcss-loader/dist/cjs.js):\\\\nSyntaxError\\\\n\\\\n(4:1) /Users/mac/Proyectos Codigo/proyecto final BIT/front-back-car-fast/Frontend/src/app/dashboard/pages/cars/cars.component.css Unclosed block\\\\n\\\\n \\\\u001b[90m 2 | \\\\u001b[39m    gap\\\\u001b[33m:\\\\u001b[39m 20px\\\\u001b[33m;\\\\u001b[39m\\\\n \\\\u001b[90m 3 | \\\\u001b[39m\\\\u001b[33m}\\\\u001b[39m\\\\n\\\\u001b[1m\\\\u001b[31m>\\\\u001b[39m\\\\u001b[22m\\\\u001b[90m 4 | \\\\u001b[39m\\\\u001b[33m.card-body\\\\u001b[39m\\\\u001b[33m{\\\\u001b[39m\\\\n \\\\u001b[90m   | \\\\u001b[39m\\\\u001b[1m\\\\u001b[31m^\\\\u001b[39m\\\\u001b[22m\\\\n \\\\u001b[90m 5 | \\\\u001b[39m    display\\\\u001b[33m:\\\\u001b[39m flex\\\\u001b[33m;\\\\u001b[39m\\\\n \\\\u001b[90m 6 | \\\\u001b[39m    flex-direction\\\\u001b[33m:\\\\u001b[39m column\\\\u001b[33m;\\\\u001b[39m\\\\n\\\");\\n\\n })\\n\\n \\t});\\n\\n \\t\\n \\t// startup\\n \\t// Load entry module and return exports\\n \\t// This entry module doesn't tell about it's top-level declarations so it can't be inlined\\n \\tvar __webpack_exports__ = {};\\n \\t__webpack_modules__[795]();\\n \\tresource = __webpack_exports__;\\n \\t\\n })()\\n;\\n/*# sourceMappingURL=cars.component.css.map*/\"]\n});","map":{"version":3,"mappings":";;;;;;IAIIA,8BAGC;IAEGA,yBAIE;IAEFA,8BAAuB;IACEA,YAAmC;;IAAAA,iBAAK;IAC/DA,6BAAsB;IAAAA,YAAkC;;IAAAA,iBAAK;IAC7DA,6BAAqB;IAAAA,aAAkC;;IAAAA,iBAAI;IAM3DA,kCAA6D;IAAAA,oBAAG;IAAAA,iBAAS;;;;IARlDA,eAAmC;IAAnCA,yEAAmC;IACpCA,eAAkC;IAAlCA,gEAAkC;IACnCA,eAAkC;IAAlCA,iEAAkC;IAMjCA,eAAsC;IAAtCA,yEAAsC;;;ACftE,OAAM,MAAOC,aAAa;EAExB;EACAC,YAAoBC,YAAwB,EAAWC,MAAa;IAAhD,iBAAY,GAAZD,YAAY;IAAuB,WAAM,GAANC,MAAM;IAF7D,iBAAY,GAAQ,EAAE;EAEiD;EACxE;EAEAC,QAAQ;IACP,IAAI,CAACC,OAAO,EAAE;EACf;EAEAA,OAAO;IACJ,IAAI,CAACH,YAAY,CAACG,OAAO,EAAE,CAACC,SAAS,CAAEC,IAAQ,IAAG;MAChD,IAAI,CAACC,YAAY,GAAGD,IAAI;MAAC;MACzBE,OAAO,CAACC,GAAG,CAAC,IAAI,CAACF,YAAY,CAAC;IAClC,CAAC,CAAC;EAAA;;AAdSR,aAAa;mBAAbA,aAAa;AAAA;AAAbA,aAAa;QAAbA,aAAa;EAAAW;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MDP1BhB,8BAAwB;MAEpBA,gEAwBM;MACRA,iBAAM;;;MAxBqBA,eAAe;MAAfA,0CAAe","names":["i0","CarsComponent","constructor","carsServices","router","ngOnInit","getCars","subscribe","cars","carsCargados","console","log","selectors","decls","vars","consts","template"],"sourceRoot":"","sources":["/Users/mac/Proyectos Codigo/proyecto final BIT/front-back-car-fast/Frontend/src/app/dashboard/pages/cars/cars.component.html","/Users/mac/Proyectos Codigo/proyecto final BIT/front-back-car-fast/Frontend/src/app/dashboard/pages/cars/cars.component.ts"],"sourcesContent":["<!-- <p *ngIf=\"carsCargados\">cargaron los usuarios</p> -->\n<!-- solo aparesca si ya cargaron los usuarios -->\n<div class=\"container \">\n  <div class=\"row cards-container\">\n    <div\n      *ngFor=\"let carCargado of carsCargados\"\n      class=\"col-12 col-sm-6 col-md-4 col-lg-3 \"\n    >\n      <div class=\"card\">\n        <img\n          class=\"card-img\"\n          src=\"https://picsum.photos/700/400?cars\"\n          alt=\"imagen aleatoria\"\n        />\n\n        <div class=\"card-body\">\n          <h1 class=\"card-title\">{{ carCargado.marca | uppercase }} </h1>\n          <h2 class=\"card-text\">{{ carCargado.modelo | uppercase}}</h2>  <!--Modelo-->\n          <p class=\"card-text\">{{ carCargado.precio | currency }}</p>\n          <!-- <p class=\"card-text\">Age: {{ carCargado.age }}</p>\n          <p class=\"card-text\">Kilometraje: {{ carCargado.kilometraje }}</p>\n          <p class=\"card-text\">Transmision: {{ carCargado.transmision }}</p>\n          <p class=\"card-text\">Ciudad: {{ carCargado.ciudad }}</p> -->\n          <!-- <button type=\"button\" (click)=\"getCar(carCargado._id)\">VER</button> -->\n          <button type=\"button\" routerLink=\"getCar/{{carCargado._id}}\">VER</button>\n        </div>\n\n      </div>\n    </div>\n  </div>\n</div>\n","import { Component } from '@angular/core';\nimport { CarsService } from '../../services/cars.service';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'list-cars',\n  templateUrl: './cars.component.html',\n  styleUrls: ['./cars.component.css']\n})\nexport class CarsComponent { \n  carsCargados:any []=[];\n  //inyectarlo propiedad e programacion orientada a objetos (inyeccion de dependencias)\n  constructor(private carsServices:CarsService , private router:Router) {}\n //para estar seguro que solo se usa en ese componente pomenos private\n  \n ngOnInit(){\n  this.getCars();\n }\n \n getCars(){\n    this.carsServices.getCars().subscribe((cars:any)=>{//cars solo existe entre llaves\n      this.carsCargados = cars,//por eso lo guardamos en una variable para poder sacar el cars y utilizarlo \n      console.log(this.carsCargados);\n  })}\n\n}\n\n \n  //inyectarlo propiedad e programacion orientada a objetos (inyeccion de dependencias)\n  /* constructor(private carsServices:CarsService){ //para estar seguro que solo se usa en ese componente pomenos private\n   this.carsServices.getCars().subscribe((cars:any)=>{//cars solo existe entre llaves\n    this.carsCargados =cars,//por eso lo guardamos en una variable para poder sacar el cars y utilizarlo \n    console.log(this.carsCargados);\n    \n   })\n  }  */\n\n/* const mongoose = require('mongoose');\n\nconst imageSchema = new mongoose.Schema({\n  name: String,\n  data: Buffer,\n  contentType: String\n});\n\nconst Image = mongoose.model('Image', imageSchema);\n\nmodule.exports = Image; */"]},"metadata":{},"sourceType":"module","externalDependencies":[]}